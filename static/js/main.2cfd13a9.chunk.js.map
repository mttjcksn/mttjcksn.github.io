{"version":3,"sources":["library/nodes/OverdriveNode.tsx","library/nodes/SvfNode.tsx","library/Library.tsx","library/nodes/InputNode.tsx","library/nodes/OutputNode.tsx","menu/LibraryLayout.tsx","menu/PropertiesLayout.tsx","menu/Menu.tsx","controls/Controls.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["overdriveDesc","name","desc","category","nodeType","inPortList","type","outPortList","paramList","min","max","default","svfDesc","nodeTypes","audioInNode","memo","args","position","Position","Bottom","style","width","height","background","onConnect","params","console","log","className","data","audioOutNode","Top","overdrive","props","selectedCss","selected","portStyle","map","p","i","paddingBottom","pl","value","svf","objs","lib","categories","objects","LibraryLayout","gridColumn","Object","keys","key","index","onDragStart","event","dataTransfer","setData","effectAllowed","draggable","customStyles","menu","provided","state","backgroundColor","color","control","isSelected","option","singleValue","PropertiesLayout","opts","label","shapeOpts","numboxStyle","input","padding","fontSize","paramsCpy","selObj","length","controls","forEach","c","push","styles","options","fixed","ctlIdx","onChange","opt","onParamChange","step","precision","size","val","mapMin","mapMax","mapShape","Menu","show","activeTab","this","setState","tab","onClick","setShow","fontFamily","Button","active","renderActiveTab","variant","onSave","paddingTop","e","onLoad","React","Component","Knob","xpos","diameter","theme","donutColor","getComputedStyle","document","documentElement","getPropertyValue","bgrColor","centerColor","centerFocusedColor","donutThickness","display","right","marginTop","onValueChange","callbackVal","ariaLabelledBy","spaceMaxFromZero","text","callbackName","obj","PageButton","pos","borderColor","borderWidth","Encoders","page","pageNumber","ctls","toString","knobs","pageButtons","cont","lastIdx","setPage","addPage","initialElements","id","inputs","outputs","x","y","initialControls","selIndex","seperator","App","reactFlowWrapper","useRef","useState","reactFlowInstance","setReactFlowInstance","elements","setElements","setControls","setSelectedObj","auth","setAuth","ref","onElementClick","element","onSelectionChange","selements","onPaneClick","onElementsRemove","elementsToRemove","els","removeElements","addEdge","_reactFlowInstance","onDrop","preventDefault","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","objectData","newNode","selectable","es","concat","onDragOver","dropEffect","deleteKeyCode","updatedEles","blobby","Blob","JSON","stringify","saveAs","reader","FileReader","onload","a","r","result","settings","split","parse","cs","readAsText","target","files","gap","allCtls","el","undefined","pi","toFixed","p1","border","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oVAKaA,G,YAA4B,CACvCC,KAAM,YACNC,KAAM,uBACNC,SAAU,gBACVC,SAAU,YACVC,WAAY,CAAC,CAACJ,KAAM,WAAYC,KAAM,wBAAyBI,KAAM,IACrEC,YAAa,CAAC,CAACN,KAAM,YAAaC,KAAM,kBAAmBI,KAAM,IACjEE,UAAW,CACT,CAACP,KAAK,YAAaC,KAAK,oBAAqBO,IAAI,EAAGC,IAAI,EAAGC,QAAQ,GACnE,CAACV,KAAK,OAAQC,KAAK,OAAQO,IAAI,EAAGC,IAAI,EAAGC,QAAQ,OCT9C,IAAMC,EAAsB,CACjCX,KAAM,wBACNC,KAAM,iCACNC,SAAU,gBACVC,SAAU,MACVC,WAAY,CAAC,CAACJ,KAAM,WAAYC,KAAM,uBAAwBI,KAAM,IACpEC,YAAa,CAAC,CAACN,KAAM,YAAaC,KAAM,iBAAkBI,KAAM,IAChEE,UAAW,CACT,CAACP,KAAK,OAAQC,KAAK,0BAA2BO,IAAI,EAAGC,IAAI,KAAOC,QAAQ,MACxE,CAACV,KAAK,IAAMC,KAAK,mBAAoBO,IAAI,EAAGC,IAAI,EAAGC,QAAQ,GAC3D,CAACV,KAAK,QAAUC,KAAK,eAAgBO,IAAI,EAAGC,IAAI,EAAGC,QAAQ,KCHtD,IAYIE,EAAY,CACrBC,YCrBWC,gBAAK,SAACC,GAEnB,OACE,qCACE,cAAC,IAAD,CACEV,KAAK,SACLW,SAAUC,IAASC,OACnBC,MANY,CAAEC,MAAM,OAAQC,OAAO,OAAQC,WAAY,QAOvDC,UAAW,SAACC,GAAD,OAAYC,QAAQC,IAAI,mBAAoBF,MAEzD,qBAAKG,UAAU,YAAf,SACGZ,EAAKa,KAAK5B,aDWf6B,aEtBWf,gBAAK,SAACC,GAGnB,OACE,qCACE,cAAC,IAAD,CACEV,KAAK,SACLW,SAAUC,IAASa,IACnBX,MAPY,CAAEC,MAAM,OAAQC,OAAO,OAAQC,WAAY,QAQvDC,UAAW,SAACC,GAAD,OAAYC,QAAQC,IAAI,mBAAoBF,MAEzD,qBAAKG,UAAU,YAAf,SACGZ,EAAKa,KAAK5B,aFWf+B,UFRW,SAAuBC,GAEpC,IAAMC,EAAcD,EAAME,SAAU,WAAa,GAC3CC,EAAY,CAAEf,MAAM,OAAQC,OAAO,OAAQC,WAAY,QAE7D,OACE,qCAEMvB,EAAcK,WAAWgC,KAAI,SAACC,EAAEC,GAC9B,OACE,cAAC,IAAD,CAEEjC,KAAK,SACLW,SAAUC,IAASa,IACnBX,MAAOgB,EACPZ,UAAW,SAACC,GAAD,OAAYC,QAAQC,IAAI,mBAAoBF,KAJlDc,MASf,sBAAKX,UAAS,oBAAeM,GAA7B,UACE,qBAAKN,UAAW,aAAcR,MAAO,CAACoB,cAAc,QAApD,SAA8DP,EAAMJ,KAAK5B,OAEzED,EAAcQ,UAAU6B,KAAI,SAACI,EAAGF,GAC9B,OACE,gCACE,qBAAKX,UAAU,iBAAiBR,MAAO,CAACC,MAAM,QAA9C,SAAwDoB,EAAGxC,OAC3D,qBAAK2B,UAAU,gBAAf,SAAgCK,EAAMJ,KAAKJ,OAAOc,GAAGG,UAF7CH,SASdvC,EAAcO,YAAY8B,KAAI,SAACC,EAAEC,GAC/B,OACE,cAAC,IAAD,CAEEjC,KAAK,SACLW,SAAUC,IAASC,OACnBC,MAAOgB,EACPZ,UAAW,SAACC,GAAD,OAAYC,QAAQC,IAAI,mBAAoBF,KAJpDc,UE5BbI,IDRW,SAAiBV,GAE9B,IAAMC,EAAcD,EAAME,SAAU,WAAa,GAC3CC,EAAY,CAAEf,MAAM,OAAQC,OAAO,OAAQC,WAAY,QAE7D,OACE,qCAEIX,EAAQP,WAAWgC,KAAI,SAACC,EAAEC,GACxB,OACE,cAAC,IAAD,CAEEjC,KAAK,SACLW,SAAUC,IAASa,IACnBX,MAAOgB,EACPZ,UAAW,SAACC,GAAD,OAAYC,QAAQC,IAAI,mBAAoBF,KAJpDc,MASX,sBAAKX,UAAS,oBAAeM,GAA7B,UACE,qBAAKN,UAAW,aAAcR,MAAO,CAACoB,cAAc,QAApD,SAA8DP,EAAMJ,KAAK5B,OAEzEW,EAAQJ,UAAU6B,KAAI,SAACI,EAAGF,GACxB,OACE,gCACE,qBAAKX,UAAU,iBAAiBR,MAAO,CAACC,MAAM,QAA9C,SAAwDoB,EAAGxC,OAC3D,qBAAK2B,UAAU,gBAAf,SAAgCK,EAAMJ,KAAKJ,OAAOc,GAAGG,UAF7CH,SAShB3B,EAAQL,YAAY8B,KAAI,SAACC,EAAEC,GACzB,OACE,cAAC,IAAD,CAEEjC,KAAK,SACLW,SAAUC,IAASC,OACnBC,MAAOgB,EACPZ,UAAW,SAACC,GAAD,OAAYC,QAAQC,IAAI,mBAAoBF,KAJpDc,WCxBXK,EAAO,GAGXA,EAAI,UAAgB5C,EACpB4C,EAAI,IAAUhC,EAEP,IAAMiC,EAAc,CACvBC,WA5BqC,CACrC,CACI7C,KAAM,gBACNC,KAAM,IAEV,CACID,KAAM,UACNC,KAAM,KAsBV6C,QAASH,GGrCG,SAASI,IAOvB,OAEM,sBAAKpB,UAAU,gBAAf,UACI,qBAAKR,MAAO,CAAC6B,WAAY,SAAUrB,UAAU,YAA7C,qBAEIiB,EAAIC,WAAWT,KAAI,SAAClC,EAAUoC,GAC1B,OACI,gCACI,qBAAaX,UAAU,eAAvB,SAAuCzB,EAASF,MAAtCsC,GAENW,OAAOC,KAAKN,EAAIE,SAASV,KAAI,SAACe,EAAKC,GAAN,OACxBR,EAAIE,QAAQK,GAAKjD,WAAaA,EAASF,KACxC,qBAAiB2B,UAAU,yBAA3B,SACI,qBAAiBA,UAAU,UAAU0B,YAAa,SAACC,GAAD,OAlBlE,SAACA,EAAYnD,GAC7BmD,EAAMC,aAAaC,QAAQ,wBAAyBrD,GACpDmD,EAAMC,aAAaE,cAAgB,OAgB0DJ,CAAYC,EAAOV,EAAIE,QAAQK,GAAKhD,WAAWuD,WAAS,EAArH,SACKd,EAAIE,QAAQK,GAAKnD,MADZoD,IADJA,GAKR,UAVJd,S,oCCZ5BqB,EAAe,CACnBC,KAAM,SAACC,EAAUC,GAAX,mBAAC,eACFD,GADC,IAEJE,gBAAiB,gBACjBC,MAAO,gBAETC,QAAS,SAACJ,EAAUC,GAAX,mBAAC,eACLD,GADI,IAEPE,gBAAiBD,EAAMI,WAAW,iBAAiB,gBACnDF,MAAO,aACP5C,MAAO,WAET+C,OAAQ,SAACN,EAAUC,GAAX,mBAAC,eACJD,GADG,IAENE,gBAAiBD,EAAMI,WAAY,iBAAiB,gBACpDF,MAAO,aACP,SAAU,CACRD,gBAAiB,qBAGrBK,YAAa,SAACP,EAAUC,GAAX,mBAAC,eACTD,GADQ,IAEXE,gBAAiBD,EAAMI,WAAW,iBAAiB,gBACnDF,MAAO,iBAKI,SAASK,EAAiBrC,GAAQ,IAAD,IAQL,IANrCsC,EAAK,CAAC,CAAC7B,MAAM,IAAK8B,MAAM,UACxBC,EAAU,CAAC,CAAC/B,MAAM,EAAG8B,MAAM,UAAW,CAAC9B,MAAM,EAAG8B,MAAM,OAAQ,CAAC9B,MAAM,EAAG8B,MAAM,SAC5EE,EAAc,CAACC,MAAO,CAACrD,OAAQ,OAAQsD,QAAQ,OAAQX,MAAO,mBAAoBY,SAAU,OAAQtD,WAAY,kBAElHuD,EAAgB,MAEjB,UAAA7C,EAAM8C,cAAN,mBAAclD,YAAd,eAAoBJ,OAAOuD,QAAS,IACrCF,EAAS,sBAAO7C,EAAM8C,cAAb,iBAAO,EAAclD,YAArB,aAAO,EAAoBJ,SAOtC,OAJAQ,EAAMgD,SAASC,SAAQ,SAACC,EAAG5C,GACvBgC,EAAKa,KAAK,CAAC1C,MAAOH,EAAGiC,MAAOW,EAAElF,UAKhC,mCACI,sBAAK2B,UAAU,gBAAf,UACI,qBAAKA,UAAU,YAAf,wBAEkB,MAAXkD,EAEDjC,EAAIE,QAAQd,EAAM8C,OAAOzE,MAAME,UAAU6B,KAAI,SAAC8C,EAAG5C,GAC/C,OACE,qCACE,qBAAKX,UAAU,oBAAf,SAAoCuD,EAAElF,OACtC,sBAAK2B,UAAU,gBAAf,UACE,qBAAKA,UAAU,iBAAf,sBACA,cAAC,IAAD,CAAQyD,OAAQzB,EAAc0B,QAASf,EAAM7B,MAAO6B,EAAKtC,EAAM8C,OAAOlD,KAAKJ,OAAOc,GAAGgD,MAAM,EAAGtD,EAAM8C,OAAOlD,KAAKJ,OAAOc,GAAGiD,OAAQ,GAC5HC,SAAU,SAACC,GACS,UAAfA,EAAKlB,MACNM,EAAUvC,GAAGgD,OAAQ,GAErBT,EAAUvC,GAAGgD,OAAQ,EACrBT,EAAUvC,GAAGiD,OAAb,OAAsBE,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAKhD,OAE7BT,EAAM0D,cAAcb,SAI3B7C,EAAM8C,OAAOlD,KAAKJ,OAAOc,GAAGgD,MAC7B,sBAAK3D,UAAU,gBAAf,UACI,qBAAKA,UAAU,iBAAf,oBACA,cAAC,IAAD,CAAcnB,IAAK0E,EAAE1E,IAAKC,IAAKyE,EAAEzE,IAAKgC,MAAOT,EAAM8C,OAAOlD,KAAKJ,OAAOc,GAAGG,MAAOkD,KAAM,GAAKC,UAAW,EAAGC,KAAM,EAAG1E,MAAOsD,EACzHe,SAAU,SAACM,GACG,MAALA,IACDjB,EAAUvC,GAAGG,MAAMqD,EACnB9D,EAAM0D,cAAcb,UAI9B,qCACA,sBAAKlD,UAAU,gBAAf,UACE,qBAAKA,UAAU,iBAAf,kBACA,cAAC,IAAD,CAAcnB,IAAK0E,EAAE1E,IAAKC,IAAKyE,EAAEzE,IAAKgC,MAAOT,EAAM8C,OAAOlD,KAAKJ,OAAOc,GAAGyD,OAAQJ,KAAM,GAAKC,UAAW,EAAGC,KAAM,EAAG1E,MAAOsD,EAC1He,SAAU,SAACM,GACC,MAALA,IACCjB,EAAUvC,GAAGyD,OAAOD,EACpB9D,EAAM0D,cAAcb,UAG9B,sBAAKlD,UAAU,gBAAf,UACE,qBAAKA,UAAU,iBAAf,kBACE,cAAC,IAAD,CAAcnB,IAAK0E,EAAE1E,IAAKC,IAAKyE,EAAEzE,IAAKgC,MAAOT,EAAM8C,OAAOlD,KAAKJ,OAAOc,GAAG0D,OAAQL,KAAM,GAAKC,UAAW,EAAGC,KAAM,EAAG1E,MAAOsD,EAC1He,SAAU,SAACM,GACC,MAALA,IACCjB,EAAUvC,GAAG0D,OAAOF,EACpB9D,EAAM0D,cAAcb,UAGhC,sBAAKlD,UAAU,gBAAf,UACE,qBAAKA,UAAU,iBAAf,oBACE,cAAC,IAAD,CAAQyD,OAAQzB,EAAc0B,QAASb,EAAW/B,MAAO+B,EAAUxC,EAAM8C,OAAOlD,KAAKJ,OAAOc,GAAG2D,UAC3FT,SAAU,SAACC,GACTZ,EAAUvC,GAAG2D,SAAb,OAAwBR,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAKhD,MAC3BT,EAAM0D,cAAcb,kBAUxC,8DCjGb,IAAMqB,EAAb,kDAII,WAAYb,GAAoB,IAAD,8BAC3B,cAAMA,IAHVvB,WAE+B,EAG3B,EAAKA,MAAQ,CAACqC,MAAM,EAAOC,UAAW,GAHX,EAJnC,oDAUYD,GACJE,KAAKC,SAAS,CAACH,KAAMA,MAX7B,sCAcoBI,GAEZF,KAAKC,SAAS,CAACF,UAAUG,MAhBjC,+BAqBW,IAAD,OAER,OACU,qCACA,sBAAK5E,UAAU,SAAf,UACI,qBAAKA,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAgB6E,QAAW,kBAAI,EAAKC,SAAS,EAAK3C,MAAMqC,WAClF,qBAAKhF,MAAO,CAACuF,WAAY,UAAzB,sCAEJ,sBAAK/E,UAAW0E,KAAKvC,MAAMqC,KAAO,iBAAmB,iBAArD,UAEI,cAACQ,EAAA,EAAD,CAAQC,OAAiC,IAAzBP,KAAKvC,MAAMsC,UAAgCzE,UAAU,oBAAqB6E,QAAS,kBAAI,EAAKK,gBAAgB,IAAIC,QAAQ,oBAAxI,qBACA,cAACH,EAAA,EAAD,CAAQC,OAAiC,IAAzBP,KAAKvC,MAAMsC,UAAgCzE,UAAU,oBAAqB6E,QAAS,kBAAI,EAAKK,gBAAgB,IAAIC,QAAQ,oBAAxI,uBACA,cAACH,EAAA,EAAD,CAAQC,OAAiC,IAAzBP,KAAKvC,MAAMsC,UAAgCzE,UAAU,oBAAqB6E,QAAS,kBAAI,EAAKK,gBAAgB,IAAIC,QAAQ,oBAAxI,kBACA,cAACH,EAAA,EAAD,CAAQC,OAAiC,IAAzBP,KAAKvC,MAAMsC,UAAgCzE,UAAU,oBAAqB6E,QAAS,kBAAI,EAAKK,gBAAgB,IAAIC,QAAQ,oBAAxI,sBAG6B,IAAzBT,KAAKvC,MAAMsC,UACP,cAAC/B,EAAD,CAAkBW,SAAUqB,KAAKrE,MAAMgD,SAAUF,OAAQuB,KAAKrE,MAAM8C,OAAQY,cAAeW,KAAKrE,MAAM0D,gBAEjF,IAAzBW,KAAKvC,MAAMsC,UACP,cAACrD,EAAD,IAEqB,IAAzBsD,KAAKvC,MAAMsC,UACX,qCACI,qBAAKjF,MAAO,CAAC6B,WAAY,SAAUrB,UAAU,YAA7C,kBACA,cAACgF,EAAA,EAAD,CAAShF,UAAU,aAAc6E,QAAS,kBAAI,EAAKxE,MAAM+E,UAAzD,kBACA,wBAAOpF,UAAU,aAAaR,MAAO,CAAC6F,WAAW,MAAO3F,OAAO,QAA/D,iBAEI,uBAAOM,UAAU,aAAatB,KAAK,OAAOmF,SAAU,SAACyB,GAAD,OAAO,EAAKjF,MAAMkF,OAAOD,YAKjF,eAtDxB,GAA0BE,IAAMC,W,gBCRnBC,G,MAAb,4MAEEC,KAAS,KAAK,EAAE,EAAKtF,MAAMoB,OAAQ,GAFrC,uDAIS,IAAD,OAEJ,OAAO,mCAAE,cAAC,IAAD,CACHmE,SAAU,GACV/G,IAAK,EACLC,IAAK,IACLkF,KAAM,EACNlD,MAAO4D,KAAKrE,MAAMiC,QAAQxB,MAC1B+E,MAAO,CACHC,WAAYC,iBAAiBC,SAASC,iBAAiBC,iBAAiB,kBACxEC,SAAUJ,iBAAiBC,SAASC,iBAAiBC,iBAAiB,YACtEE,YAAaL,iBAAiBC,SAASC,iBAAiBC,iBAAiB,YAEzEG,mBAAoBN,iBAAiBC,SAASC,iBAAiBC,iBAAiB,YAChFI,eAAgB,GAEpB9G,MAAO,CACL+G,QAAS,eACTlH,SAAU,QACVmH,MAAO9B,KAAKiB,KAAK,KACjBc,UAAW,OACXhH,MAAO,SAETiH,cAAe,SAACvC,GAAD,OAAO,EAAK9D,MAAMsG,YAAYxC,IAC7CyC,eAAgB,WAChBC,kBAAkB,EAvBf,SAyBJ,cAAC,IAAD,CAAU7G,UAAU,kBAAkBR,MAAO,CAACC,MAAM,QAASC,OAAO,QACzDoB,MAAO4D,KAAKrE,MAAMiC,QAAQjE,KACzBwF,SAAU,SAACiD,GAAD,OAAQ,EAAKzG,MAAM0G,aAAaD,IAC1C1B,OAAQ,SAAC4B,GAAD,OAAO,EAAK3G,MAAM0G,aAAaC,EAAIlG,kBAlChE,GAA0B0E,IAAMC,YA0CnBwB,EAAb,uKAEW,IAAD,OACA,OAAO,qBAAKzH,MAAO,CAACgH,MAAM9B,KAAKrE,MAAM6G,IAAI,KAC3BC,YAA+B,aAAnBzC,KAAKrE,MAAM8B,MAAmB,wBAAwB,sBAClEiF,YAA+B,aAAnB1C,KAAKrE,MAAM8B,MAAmB,MAAM,OAElDnC,UAAU,aAAa6E,QAAS,kBAAI,EAAKxE,MAAMwE,WAJpD,SAIgEH,KAAKrE,MAAMyG,WAP5F,GAAgCtB,IAAMC,WAYzB4B,EAAb,kDAII,WAAYhH,GAAQ,IAAD,8BACf,cAAMA,IAHZ8B,MAAQ,CAACmF,KAAK,GAIR,EAAKnF,MAAQ,CAACmF,KAAM,GAFL,EAJvB,oDASYC,GACN,GAAG7C,KAAKrE,MAAMgD,SAASD,OAAS,GAAKmE,EAAW,CAC9C,IAAIC,EAAI,YAAO9C,KAAKrE,MAAMgD,UAC1BmE,EAAKhE,KAAK,CAACnF,KAAK,MAAMmJ,EAAKpE,OAAOqE,WAAY3G,MAAM,IACpD0G,EAAKhE,KAAK,CAACnF,KAAK,MAAMmJ,EAAKpE,OAAOqE,WAAY3G,MAAM,IACpD0G,EAAKhE,KAAK,CAACnF,KAAK,MAAMmJ,EAAKpE,OAAOqE,WAAY3G,MAAM,IACpD0G,EAAKhE,KAAK,CAACnF,KAAK,MAAMmJ,EAAKpE,OAAOqE,WAAY3G,MAAM,IACpD4D,KAAKrE,MAAMwD,SAAS2D,EAAM,KAAM,KAAM,SAhB9C,8BAoBYD,GACN7C,KAAKC,SAAS,CAAC2C,KAAMC,MArB3B,+BA8BM,IANO,IAAD,OAEFG,EAAuB,GACvBC,EAA6B,GAC7BT,EAAM,EAJJ,aAOJ,IAAMU,EAAOjH,EACb+G,EAAMlE,KAAK,cAAC,EAAD,CAAiBlB,QAAS,EAAKjC,MAAMgD,SAA0B,EAAhB,EAAKlB,MAAMmF,KAAQM,GAC7DjB,YAAa,SAACxC,GAAO,EAAK9D,MAAMwD,SAAS,KAAuB,EAAhB,EAAK1B,MAAMmF,KAAQM,EAAMzD,EAAK,OAC9E4C,aAAc,SAAC1I,GAAQ,EAAKgC,MAAMwD,SAAS,KAAuB,EAAhB,EAAK1B,MAAMmF,KAAQM,EAAM,KAAMvJ,IACjFoD,MAAOmG,GAHDA,KAFfjH,EAAI,EAAGA,EAAI,EAAGA,IAAM,IANvB,iBAeJ,IAAMD,EAAIC,EAEVuG,EAAa,IAAL,EAAEvG,GAAO,EACjB,IAAIkH,EAAgB,GAALlH,EAAE,GAEd,EAAKN,MAAMgD,SAASD,QAAUyE,EAC/BF,EAAYnE,KAAK,cAAC,EAAD,CAAoB0D,IAAKA,EAAKJ,KAAMnG,EAAE8G,WAAYtF,MAAO,EAAKA,MAAMmF,OAAO5G,EAAE,WAAW,SAAUmE,QAAS,WAAK,EAAKiD,QAAQpH,KAA5GC,IAE9BkH,IAAY,EAAKxH,MAAMgD,SAASD,OAAO,EACzCuE,EAAYnE,KAAK,cAAC,EAAD,CAAoB0D,IAAKA,EAAKJ,KAAK,IAAI3E,MAAM,SAAS0C,QAAS,WAAK,EAAKkD,QAAQrH,KAAhEC,IAElCgH,EAAYnE,KAAK,cAAC,EAAD,CAAoB0D,IAAKA,EAAKJ,KAAK,GAAG3E,MAAM,WAAW0C,QAAS,cAA/ClE,KAZxC,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IAAM,IAiBvB,OACI,sBAAKX,UAAU,cAAf,UACG0H,EACD,qBAAK1H,UAAU,QAAf,SACG2H,WA3DjB,GAA8BnC,IAAMC,W,QC7DhCuC,EAA2B,CAC7B,CACEC,GAAI,IACJvJ,KAAM,cACNuB,KAAM,CAAE5B,KAAM,WAAYwB,OAAQ,GAAIqI,OAAQ,GAAIC,QAAS,IAC3D9I,SAAU,CAAE+I,EAAG,IAAKC,EAAG,MAEzB,CACEJ,GAAI,IACJvJ,KAAM,eACNuB,KAAM,CAAE5B,KAAM,YAAawB,OAAQ,GAAIqI,OAAQ,GAAIC,QAAS,IAC5D9I,SAAU,CAAE+I,EAAG,IAAKC,EAAG,OAIvBC,EAA2B,CAC7B,CAACjK,KAAK,OAAQyC,MAAM,GAAG,CAACzC,KAAK,OAAQyC,MAAM,GAAG,CAACzC,KAAK,OAAQyC,MAAM,IAAI,CAACzC,KAAK,OAAQyC,MAAM,KAKxFmH,EAAK,EAELM,EAAU,EACRC,EAAY,OAkMHC,EA/LH,WAGV,IAEMC,EAAwBC,iBAAO,MALrB,EAMsCC,mBAAS,MAN/C,mBAMTC,EANS,KAMUC,EANV,OAOgBF,mBAASZ,GAPzB,mBAOTe,EAPS,KAOCC,EAPD,OAQgBJ,mBAASN,GARzB,mBAQTjF,EARS,KAQC4F,EARD,OASiBL,mBAdnB,MAKE,mBASTzF,EATS,KASD+F,EATC,OAUQN,oBAAS,GAVjB,mBAUTO,EAVS,KAUHC,EAVG,KAsJhB,OACED,EACA,qBAAK3J,MAAO,CAAEE,OAAO,SAArB,SAEE,cAAC,IAAD,UACE,qBAAKF,MAAO,CAAEE,OAAO,SAAWM,UAAU,oBAAoBqJ,IAAKX,EAAnE,SACA,eAAC,IAAD,CACElJ,MAAO,CAACG,WAAY,WACpBoJ,SAAUA,EACVO,eAnJe,SAAC3H,EAAY4H,KAoJ5BC,kBA/IkB,SAACC,GAER,MAAbA,GACuB,KAAb,OAATA,QAAS,IAATA,OAAA,EAAAA,EAAWrG,QACZ2F,EAASzF,SAAQ,SAACgC,EAAG3E,GAChB2E,EAAE2C,KAAOwB,EAAU,GAAGxB,KACvBiB,EAAe5D,GACfiD,EAAW5H,MAIZuI,EAAe,OAqIhBQ,YApJY,SAAC/H,KAqJbgI,iBAnJiB,SAACC,GAAD,OAA2BZ,GAAY,SAACa,GAAD,OAASC,YAAeF,EAAkBC,OAoJlGjK,UArJU,SAACC,GAAD,OAAiBmJ,GAAY,SAACa,GAAD,OAASE,YAAQlK,EAAQgK,OAsJhEtE,OApJO,SAACyE,GAAD,OAA6BlB,EAAqBkB,IAqJzDC,OA1EO,SAACtI,GACdA,EAAMuI,iBACN,IAAMC,EAAkBzB,EAAiB0B,QAAQC,wBAE3C3L,EAAOiD,EAAMC,aAAa0I,QAAQ,yBAClCjL,EAAWwJ,EAAkB0B,QAAQ,CACvCnC,EAAGzG,EAAM6I,QAAUL,EAAgBM,KACnCpC,EAAG1G,EAAM+I,QAAUP,EAAgBQ,MAInCC,EAAyB,CAC3BvM,KAAK,GAAD,OAAKK,GACTmB,OAAQ,GACRqI,OAAQ,GACRC,QAAS,IAIXlH,EAAIE,QAAQzC,GAAME,UAAU0E,SAAQ,SAAC5C,EAAEC,GACrCiK,EAAW/K,OAAO2D,KAAK,CAACG,OAAO,EAAM7C,MAAMJ,EAAE3B,QAAS6E,OAAQ,EAAGQ,OAAO,EAAGC,OAAO,EAAGC,SAAS,OAIhG,IAAMuG,EAAU,CACd5C,GAjHe,WAAWA,IAkH1BvJ,OACAW,WACAY,KAAM2K,EACNE,YAAY,GAGd9B,GAAY,SAAC+B,GAAD,OAAQA,EAAGC,OAAOH,OA2CxBI,WAhFW,SAACtJ,GAClBA,EAAMuI,iBACNvI,EAAMC,aAAasJ,WAAa,QA+E1BjM,UAAWA,EACXkM,cAAe,GAZjB,UAcE,cAAC,EAAD,CAAM3G,MAAM,EAAOnB,SAAUA,EAAUF,OAAQA,EAAQY,cA3IzC,SAAClE,GACrB,IAAMuL,EAAW,YAAOrC,GACxBqC,EAAY7C,GAAUtI,KAAKJ,OAASA,EACpCmJ,EAAYoC,IAwI+EhG,OA3ChF,WACX,IAAIiG,EAAS,IAAIC,KAAK,CAACC,KAAKC,UAAUzC,GAAYP,EAAY+C,KAAKC,UAAUnI,IAAY,CAAC3E,KAAM,6BAChG+M,SAAOA,OAAOJ,EAAQ,eAyCmF9F,OAtC9F,SAACD,GACVA,EAAE4E,iBACF,IAAMwB,EAAS,IAAIC,WACnBD,EAAOE,OAAP,uCAAgB,WAAOtG,GAAP,qBAAAuG,EAAA,sDACVC,EAAQJ,EAAOK,OACfC,EAAWF,EAAEG,MAAMzD,GACnBuC,EAAGQ,KAAKW,MAAMF,EAAS,IACvBG,EAAGZ,KAAKW,MAAMF,EAAS,IAC3BlM,QAAQC,IAAIgL,GACZjL,QAAQC,IAAIoM,GACdnD,EAAY+B,GACZ9B,EAAYkD,GARI,2CAAhB,sDAUAT,EAAOU,WAAW9G,EAAE+G,OAAOC,MAAM,OA0B7B,cAAC,IAAD,CAAaC,IAAK,GAAIrI,KAAM,EAAG7B,MAAO,YACtC,cAAC,EAAD,CAAUiF,KAAM,EAAGjE,SAAUA,EAAUQ,SAvIzB,SAAC2I,EAAmBlK,EAAiB6B,EAAa9F,GAEtE,GAAc,MAAXmO,GAKH,GAAGlK,EAAUe,EAASD,OAAO,CAG7B,IAAIoE,EAAI,YAAOnE,GAEJ,OAARc,IACDqD,EAAKlF,GAASxB,MAAQqD,GAEZ,OAAT9F,IACDmJ,EAAKlF,GAASjE,KAAOA,GAGvB4K,EAAYzB,GAEVwB,GAAY,SAACa,GAAD,OACVA,EAAIpJ,KAAI,SAACgM,GAmBP,YAlBeC,IAAZD,EAAGxM,MACJwM,EAAGxM,KAAKJ,OAAOyD,SAAQ,SAAC5C,EAAEiM,GACxB,IAAe,IAAZjM,EAAEiD,OAAmBjD,EAAEkD,SAAWtB,EACnC,OAAO5B,EAAE4D,UACP,KAAK,EACH5D,EAAEI,OAAW0G,EAAKlF,GAASxB,MAAM,KAAQJ,EAAE2D,OAAO3D,EAAE0D,QAAW1D,EAAE0D,QAAQwI,QAAQ,GACjF,MACF,KAAK,EACHlM,EAAEI,OAAW0G,EAAKlF,GAASxB,MAAM,KAAQ0G,EAAKlF,GAASxB,MAAM,MAAQJ,EAAE2D,OAAO3D,EAAE0D,QAAW1D,EAAE0D,QAAQwI,QAAQ,GAC7G,MACF,KAAK,EACH,IAAIC,GAAMrF,EAAKlF,GAASxB,MAAM,IAAI,EAClCJ,EAAEI,QAAa,IAAK+L,EAAGA,GAAK,KAAQnM,EAAE2D,OAAO3D,EAAE0D,QAAW1D,EAAE0D,QAAQwI,QAAQ,OAM/EH,cAtCXxD,EAAYuD,MAqIR,cAAC,IAAD,aAON,8BACE,sBAAKhN,MAAO,CAACH,SAAS,WAAYoL,KAAK,OAAQE,IAAI,QAAnD,2BACA,cAAC,IAAD,CAAUnL,MAAO,CAACC,MAAM,QAASC,OAAO,OAAQ0C,gBAAgB,OAAQ0K,OAAO,kBAAkBzN,SAAS,WAAaoL,KAAK,MAAOE,IAAI,QACnIvF,OAAQ,SAAC4B,GAAwB,WAAdA,EAAIlG,OAAoBsI,GAAQ,YC/MzC2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,EAAD,IAASrH,SAASsH,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2cfd13a9.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Handle, Position } from 'react-flow-renderer';\r\nimport {objectDesc} from '../LibraryTypes'\r\nimport './node.css';\r\n\r\nexport const overdriveDesc: objectDesc = {\r\n  name: \"Overdrive\",\r\n  desc: \"Overdrive distortion\",\r\n  category: \"Audio Effects\",\r\n  nodeType: \"overdrive\",\r\n  inPortList: [{name: \"Audio in\", desc: \"Audio to be distorted\", type: 0}],\r\n  outPortList: [{name: \"Audio out\", desc: \"Distorted audio\", type: 0}],\r\n  paramList: [\r\n    {name:\"Overdrive\", desc:\"Distortion amount\", min:0, max:1, default:0},\r\n    {name:\"Tone\", desc:\"Tone\", min:0, max:1, default:0.5},\r\n  ]\r\n}\r\n\r\n\r\nexport default function OverdriveNode(props) {\r\n\r\n  const selectedCss = props.selected? \"selected\" : \"\";\r\n  const portStyle = { width:'10px', height:'10px', background: '#555'};\r\n  \r\n  return (\r\n    <>\r\n      {\r\n          overdriveDesc.inPortList.map((p,i)=>{\r\n            return(\r\n              <Handle\r\n                key={i}\r\n                type=\"target\"\r\n                position={Position.Top}\r\n                style={portStyle}\r\n                onConnect={(params) => console.log('handle onConnect', params)}\r\n              />\r\n            )\r\n            })\r\n      }\r\n      <div className={`nodeStyle ${selectedCss}`}> \r\n        <div className={\"ObjUiTitle\"} style={{paddingBottom:'15px'}}>{props.data.name}</div>\r\n        {\r\n        overdriveDesc.paramList.map((pl,i)=>{\r\n          return(\r\n            <div key={i}>\r\n              <div className=\"ObjUiParamName\" style={{width:'60px'}}>{pl.name}</div>\r\n              <div className=\"ObjUiParamVal\">{props.data.params[i].value}</div>\r\n            </div>\r\n          )\r\n        })\r\n        }\r\n        </div>\r\n      {    \r\n        overdriveDesc.outPortList.map((p,i)=>{\r\n          return(\r\n            <Handle\r\n            key={i}\r\n              type=\"source\"\r\n              position={Position.Bottom}\r\n              style={portStyle}\r\n              onConnect={(params) => console.log('handle onConnect', params)}\r\n            />\r\n          )\r\n          })\r\n      }\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { Handle, Position } from 'react-flow-renderer';\r\nimport {objectDesc} from '../LibraryTypes'\r\nimport './node.css';\r\n\r\nexport const svfDesc: objectDesc = {\r\n  name: \"State Variable Filter\",\r\n  desc: \"Resonant state-variable filter\",\r\n  category: \"Audio Effects\",\r\n  nodeType: \"svf\",\r\n  inPortList: [{name: \"Audio in\", desc: \"Audio to be filtered\", type: 0}],\r\n  outPortList: [{name: \"Audio out\", desc: \"Filtered audio\", type: 0}],\r\n  paramList: [\r\n    {name:\"Freq\", desc:\"Filter center frequency\", min:0, max:15000, default:15000},\r\n    {name:\"Q\",  desc:\"Filter resonance\", min:0, max:1, default:0},\r\n    {name:\"State\",  desc:\"LP/BP/HP mix\", min:0, max:1, default:0},\r\n  ]\r\n}\r\n\r\n\r\nexport default function SvfNode(props) {\r\n\r\n  const selectedCss = props.selected? \"selected\" : \"\";\r\n  const portStyle = { width:'10px', height:'10px', background: '#555'};\r\n  \r\n  return (\r\n    <>\r\n    {\r\n        svfDesc.inPortList.map((p,i)=>{\r\n          return(\r\n            <Handle\r\n            key={i}\r\n              type=\"target\"\r\n              position={Position.Top}\r\n              style={portStyle}\r\n              onConnect={(params) => console.log('handle onConnect', params)}\r\n            />\r\n          )\r\n          })\r\n    }\r\n      <div className={`nodeStyle ${selectedCss}`}> \r\n        <div className={\"ObjUiTitle\"} style={{paddingBottom:'15px'}}>{props.data.name}</div>\r\n        {\r\n        svfDesc.paramList.map((pl,i)=>{\r\n          return(\r\n            <div key={i}>\r\n              <div className=\"ObjUiParamName\" style={{width:'60px'}}>{pl.name}</div>\r\n              <div className=\"ObjUiParamVal\">{props.data.params[i].value}</div>\r\n            </div>\r\n          )\r\n        })\r\n        }\r\n        </div>\r\n    {\r\n      svfDesc.outPortList.map((p,i)=>{\r\n        return(\r\n          <Handle\r\n          key={i}\r\n            type=\"source\"\r\n            position={Position.Bottom}\r\n            style={portStyle}\r\n            onConnect={(params) => console.log('handle onConnect', params)}\r\n          />\r\n        )\r\n        })\r\n    }\r\n    </>\r\n  );\r\n};","\r\nimport {objectDictionary, libCategoryDesc, library} from './LibraryTypes'\r\n\r\n/* Import memos and descriptors from object files */\r\n/* TODO - Auto-import all objects in a folder */\r\nimport InputNode from './nodes/InputNode';\r\nimport OutputNode from './nodes/OutputNode';\r\nimport OverdriveNode, {overdriveDesc} from './nodes/OverdriveNode';\r\nimport SvfNode, {svfDesc} from './nodes/SvfNode';\r\n\r\n\r\n  /* Create lists of categories */\r\n  export const cats:libCategoryDesc[]  = [\r\n    {\r\n        name: \"Audio Effects\",\r\n        desc: \"\",\r\n    },\r\n    {\r\n        name: \"Control\",\r\n        desc: \"\",\r\n    },\r\n];\r\n\r\n/* List and name all the node types to pass to react-flow */\r\nexport const nodeTypes = {\r\n    audioInNode: InputNode,\r\n    audioOutNode: OutputNode,\r\n    overdrive: OverdriveNode,\r\n    svf: SvfNode,\r\n  };\r\n\r\n\r\n/* Create dictionary of object descriptors, which you can lookup with node typename */\r\nvar objs = {} as objectDictionary;\r\n\r\n/* TODO: Add these automagially */\r\nobjs['overdrive'] = overdriveDesc;\r\nobjs['svf'] = svfDesc;\r\n\r\nexport const lib:library = {\r\n    categories: cats,\r\n    objects: objs\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { memo } from 'react';\r\nimport { Handle, Position } from 'react-flow-renderer';\r\nimport './node.css';\r\n\r\nexport default memo((args: any) => {\r\n  const portStyle = { width:'10px', height:'10px', background: '#555'};\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"source\"\r\n        position={Position.Bottom}\r\n        style={portStyle}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n      />\r\n      <div className=\"nodeStyle\"> \r\n        {args.data.name}\r\n      </div>\r\n\r\n    </>\r\n  );\r\n});","import React, { memo } from 'react';\r\nimport { Handle, Position } from 'react-flow-renderer';\r\nimport './node.css';\r\n\r\nexport default memo((args: any) => {\r\n  const portStyle = { width:'10px', height:'10px', background: '#555'};\r\n\r\n  return (\r\n    <>\r\n      <Handle\r\n        type=\"target\"\r\n        position={Position.Top}\r\n        style={portStyle}\r\n        onConnect={(params) => console.log('handle onConnect', params)}\r\n      />\r\n      <div className=\"nodeStyle\"> \r\n        {args.data.name}\r\n      </div>\r\n\r\n    </>\r\n  );\r\n});","import React from 'react';\r\nimport {lib}  from '../library/Library';\r\nimport './menu.css';\r\n\r\n export default function LibraryLayout() {\r\n\r\n    const onDragStart = (event: any, nodeType: any) => {\r\n        event.dataTransfer.setData('application/reactflow', nodeType);\r\n        event.dataTransfer.effectAllowed = 'move';\r\n      };\r\n\r\n  return (\r\n    \r\n        <div className=\"libraryLayout\" >\r\n            <div style={{gridColumn: '1 / 4'}} className=\"menuTitle\" >Library</div>\r\n            {\r\n                lib.categories.map((category, i) => {\r\n                    return (\r\n                        <div key={i}>\r\n                            <div key={i} className=\"menuSubtitle\">{category.name}</div>\r\n                            {\r\n                                Object.keys(lib.objects).map((key, index) => \r\n                                     lib.objects[key].category === category.name ?\r\n                                    <div key={index} className=\"libraryObjectContainer\">\r\n                                        <div key={index} className=\"dndnode\" onDragStart={(event) => onDragStart(event, lib.objects[key].nodeType)} draggable>\r\n                                            {lib.objects[key].name}\r\n                                        </div>\r\n                                    </div>    \r\n                                    : null\r\n                                )\r\n                            }\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\nimport NumericInput from 'react-numeric-input';\r\nimport Select from 'react-select'\r\nimport {lib} from '../library/Library'\r\nimport './menu.css';\r\n\r\nconst customStyles = {\r\n  menu: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: 'var(--bgGrey)',\r\n    color: 'whitesmoke',\r\n  }),\r\n  control: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected?'var(--bgGrey2)':'var(--bgGrey)',\r\n    color: 'whitesmoke',\r\n    width: '150px',\r\n  }),\r\n  option: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected ?'var(--bgGrey2)':'var(--bgGrey)',\r\n    color: 'whitesmoke',\r\n    ':hover': {\r\n      backgroundColor: 'var(--bgGrey2)'\r\n    }\r\n  }),\r\n  singleValue: (provided, state) => ({\r\n    ...provided,\r\n    backgroundColor: state.isSelected?'var(--bgGrey2)':'var(--bgGrey)',\r\n    color: 'whitesmoke',\r\n  })\r\n}\r\n\r\n\r\nexport default function PropertiesLayout(props) {\r\n    \r\n  var opts=[{value:999, label:\"Fixed\"}];\r\n  var shapeOpts=[{value:0, label:\"Linear\"}, {value:1, label:\"Exp\"}, {value:2, label:\"Para\"}];\r\n  const numboxStyle = {input: {height: '35px', padding:'10px', color: 'var(--accentCol)', fontSize: '16px', background: 'var(--bgGrey)'}};\r\n\r\n  var paramsCpy:any = null;\r\n  \r\n  if(props.selObj?.data?.params.length > 0){\r\n    paramsCpy = [...props.selObj?.data?.params];\r\n  }\r\n\r\n  props.controls.forEach((c, i) => {\r\n      opts.push({value: i, label: c.name});\r\n  })\r\n\r\n  return (\r\n     \r\n    <>\r\n        <div className=\"libraryLayout\">\r\n            <div className=\"menuTitle\">Properties</div>\r\n                {\r\n                  (paramsCpy!=null)?      \r\n\r\n                  lib.objects[props.selObj.type].paramList.map((c, i) => {\r\n                    return(\r\n                      <>\r\n                        <div className=\"inspectorSubTitle\">{c.name}</div>\r\n                        <div className=\"inspectorProp\">\r\n                          <div className=\"inspectorLabel\">Control:</div> \r\n                          <Select styles={customStyles} options={opts} value={opts[props.selObj.data.params[i].fixed?0:(props.selObj.data.params[i].ctlIdx)+1]}\r\n                                onChange={(opt)=>{\r\n                                  if(opt!.label === \"Fixed\"){\r\n                                    paramsCpy[i].fixed = true;\r\n                                  }else{\r\n                                    paramsCpy[i].fixed = false;\r\n                                    paramsCpy[i].ctlIdx = opt?.value;\r\n                                  }\r\n                                  props.onParamChange(paramsCpy);\r\n                                }}/>\r\n                        </div>\r\n                          \r\n                          {props.selObj.data.params[i].fixed?\r\n                          <div className=\"inspectorProp\">\r\n                              <div className=\"inspectorLabel\">Value:</div> \r\n                              <NumericInput min={c.min} max={c.max} value={props.selObj.data.params[i].value} step={0.1} precision={2} size={5} style={numboxStyle}\r\n                              onChange={(val)=>{\r\n                                    if(val!=null){\r\n                                      paramsCpy[i].value=val;\r\n                                      props.onParamChange(paramsCpy);\r\n                                    }}}/>\r\n                           </div>\r\n                            :\r\n                            <>\r\n                            <div className=\"inspectorProp\">\r\n                              <div className=\"inspectorLabel\">Min:</div>\r\n                              <NumericInput min={c.min} max={c.max} value={props.selObj.data.params[i].mapMin} step={0.1} precision={2} size={5} style={numboxStyle}\r\n                              onChange={(val)=>{\r\n                                  if(val!=null){\r\n                                      paramsCpy[i].mapMin=val;\r\n                                      props.onParamChange(paramsCpy);\r\n                                    }}}/>\r\n                            </div> \r\n                            <div className=\"inspectorProp\">\r\n                              <div className=\"inspectorLabel\">Max:</div>\r\n                                <NumericInput min={c.min} max={c.max} value={props.selObj.data.params[i].mapMax} step={0.1} precision={2} size={5} style={numboxStyle}\r\n                                onChange={(val)=>{\r\n                                    if(val!=null){\r\n                                        paramsCpy[i].mapMax=val;\r\n                                        props.onParamChange(paramsCpy);\r\n                                      }}}/>\r\n                            </div>\r\n                            <div className=\"inspectorProp\">\r\n                              <div className=\"inspectorLabel\">Shape:</div>\r\n                                <Select styles={customStyles} options={shapeOpts} value={shapeOpts[props.selObj.data.params[i].mapShape]}\r\n                                    onChange={(opt)=>{\r\n                                      paramsCpy[i].mapShape = opt?.value;\r\n                                        props.onParamChange(paramsCpy);\r\n                                    }}/>\r\n                            </div>\r\n                            </>\r\n                          }\r\n                        \r\n                      </>\r\n                    )\r\n\r\n                  })  \r\n                  : <div>Select a single object</div>\r\n\r\n                }\r\n\r\n        </div>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\n","import React from 'react'\r\nimport * as FaIcons from 'react-icons/fa';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './menu.css';\r\nimport LibraryLayout from './LibraryLayout';\r\nimport PropertiesLayout from './PropertiesLayout';\r\nimport {Control} from '../controls/Controls';\r\n\r\n\r\nexport interface MenuProps {\r\n    show:false\r\n    controls:Control[]\r\n    selObj:any\r\n    onParamChange:Function\r\n    onSave:Function\r\n    onLoad:Function\r\n  }\r\n\r\ninterface MenuState {\r\n    show: boolean,\r\n    activeTab: number\r\n}\r\n\r\n\r\nexport class Menu extends React.Component <MenuProps>{\r\n    \r\n    state: MenuState;\r\n\r\n    constructor(options: MenuProps){\r\n        super(options);\r\n\r\n        this.state = {show: false, activeTab: 0};\r\n    };\r\n\r\n    setShow(show: boolean){\r\n        this.setState({show: show});\r\n    }\r\n\r\n    renderActiveTab(tab: number)\r\n    {\r\n        this.setState({activeTab:tab});\r\n    }\r\n\r\n\r\n  \r\n\trender() {\r\n\r\n\t\treturn (\r\n            <>\r\n            <div className='navbar'>\r\n                <div className=\"menuIcon\"><FaIcons.FaBars onClick = {()=>this.setShow(!this.state.show)} /></div>\r\n                <div style={{fontFamily: \"arcade\"}}>&nbsp;&nbsp;h o t w i r e</div>\r\n            </div>\r\n            <div className={this.state.show ? 'menu_show menu' : 'menu_hide menu'}>\r\n\r\n                <Button active={this.state.activeTab === 0 ? true : false} className=\"menuTabs menuTab1\"  onClick={()=>this.renderActiveTab(0)} variant=\"outline-secondary\">Library</Button>\r\n                <Button active={this.state.activeTab === 1 ? true : false} className=\"menuTabs menuTab2\"  onClick={()=>this.renderActiveTab(1)} variant=\"outline-secondary\">Inspector</Button>\r\n                <Button active={this.state.activeTab === 2 ? true : false} className=\"menuTabs menuTab3\"  onClick={()=>this.renderActiveTab(2)} variant=\"outline-secondary\">File</Button>\r\n                <Button active={this.state.activeTab === 3 ? true : false} className=\"menuTabs menuTab4\"  onClick={()=>this.renderActiveTab(3)} variant=\"outline-secondary\">Advanced</Button>\r\n                 \r\n                {\r\n                    this.state.activeTab === 1 ? \r\n                        <PropertiesLayout controls={this.props.controls} selObj={this.props.selObj} onParamChange={this.props.onParamChange}/>\r\n                    :\r\n                    this.state.activeTab === 0 ? \r\n                        <LibraryLayout/>\r\n                    : \r\n                    this.state.activeTab === 2 ? \r\n                    <>\r\n                        <div style={{gridColumn: '1 / 5'}} className=\"menuTitle\" >File</div>\r\n                        <Button  className=\"menuButton\"  onClick={()=>this.props.onSave()} >Save</Button>\r\n                        <label className=\"menuButton\" style={{paddingTop:'6px', height:'25px'}}>\r\n                            Load\r\n                            <input className=\"menuButton\" type=\"file\" onChange={(e) => this.props.onLoad(e)} />\r\n                        </label>\r\n                       \r\n                    </>\r\n                    :\r\n                        null\r\n                }\r\n    \r\n            </div>\r\n            </>\r\n\t\t);\r\n\t}\r\n};\r\n\r\n","import React from 'react';\r\nimport {Donut} from 'react-dial-knob'\r\nimport {EditText} from 'react-edit-text';\r\nimport './controls.css'\r\n\r\nexport interface ControlProps { control: Control, callbackVal: Function, callbackName: Function, index: number}\r\nexport interface Control { name: string, value: number}\r\nexport interface PageButtonProps { text: string, state:string, onClick: Function, pos: number}\r\nexport interface EncodersProps {\r\n    page: number,\r\n    controls: Control[],\r\n    onChange: Function,\r\n  }\r\n\r\n\r\n\r\nexport class Knob extends React.Component <ControlProps>{\r\n\r\n  xpos = ((120*(3-this.props.index))+15);\r\n\r\nrender(){\r\n\r\n    return <><Donut\r\n          diameter={80}\r\n          min={0}\r\n          max={100}\r\n          step={1}\r\n          value={this.props.control.value}\r\n          theme={{\r\n              donutColor: getComputedStyle(document.documentElement).getPropertyValue('--highlightCol'),\r\n              bgrColor: getComputedStyle(document.documentElement).getPropertyValue('--bgGrey'),\r\n              centerColor: getComputedStyle(document.documentElement).getPropertyValue('--bgGrey'),\r\n            //   maxedBgrColor?: string\r\n              centerFocusedColor: getComputedStyle(document.documentElement).getPropertyValue('--bgGrey'),\r\n              donutThickness: 2\r\n          }}\r\n          style={{\r\n            display: 'inline-block',\r\n            position: 'fixed',\r\n            right: this.xpos+'px',\r\n            marginTop: '20px',\r\n            width: '100px'\r\n          }}\r\n          onValueChange={(val)=>this.props.callbackVal(val)}\r\n          ariaLabelledBy={'my-label'}\r\n          spaceMaxFromZero={false}\r\n        >\r\n         <EditText className=\"contolsEditText\" style={{width:\"100px\", height:\"10px\"}} \r\n                    value={this.props.control.name} \r\n                     onChange={(text)=>this.props.callbackName(text)} \r\n                     onSave={(obj)=>this.props.callbackName(obj.value)}\r\n                    />\r\n      </Donut>\r\n      </>\r\n  }\r\n}\r\n\r\n\r\nexport class PageButton extends React.Component <PageButtonProps>{\r\n\r\n  render(){\r\n          return <div style={{right:this.props.pos+'px', \r\n                        borderColor:this.props.state===\"inactive\"?'var(--unHighlightCol)':'var(--highlightCol)',\r\n                        borderWidth:this.props.state===\"selected\"?'3px':'1px'\r\n                      }} \r\n                      className=\"pageButton\" onClick={()=>this.props.onClick()}>{this.props.text}</div>\r\n    }\r\n  }\r\n\r\n\r\nexport class Encoders extends React.Component <EncodersProps>{\r\n\r\n  state = {page:0};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {page: 0};\r\n      }\r\n\r\n    addPage(pageNumber: number){\r\n      if(this.props.controls.length / 4 <= pageNumber){\r\n        let ctls = [...this.props.controls];\r\n        ctls.push({name:\"ctl\"+ctls.length.toString(), value:0});\r\n        ctls.push({name:\"ctl\"+ctls.length.toString(), value:0});\r\n        ctls.push({name:\"ctl\"+ctls.length.toString(), value:0});\r\n        ctls.push({name:\"ctl\"+ctls.length.toString(), value:0});\r\n        this.props.onChange(ctls, null, null, null);\r\n      }\r\n    }\r\n\r\n    setPage(pageNumber: number){\r\n      this.setState({page: pageNumber});\r\n    }\r\n\r\n    render(){\r\n\r\n      var knobs: JSX.Element[] = [];\r\n      var pageButtons: JSX.Element[] = [];\r\n      var pos = 0;\r\n\r\n      for (var i = 0; i < 4; i++) {\r\n        const cont = i;\r\n        knobs.push(<Knob key={cont} control={this.props.controls[(this.state.page*4)+cont]} \r\n                        callbackVal={(val)=>{this.props.onChange(null, (this.state.page*4)+cont, val, null);}} \r\n                        callbackName={(name)=>{this.props.onChange(null, (this.state.page*4)+cont, null, name);}} \r\n                        index={cont} />)\r\n      }\r\n\r\n      for (i = 0; i < 8; i++) {\r\n        const p = i;\r\n\r\n        pos = ((7-i)*62)-7;\r\n        let lastIdx = (i+1)*4;\r\n\r\n        if(this.props.controls.length >= lastIdx){\r\n          pageButtons.push(<PageButton key={i} pos={pos} text={i.toString()} state={this.state.page===p?\"selected\":\"active\"} onClick={()=>{this.setPage(p)}}/>);\r\n        }else{\r\n          if( lastIdx === this.props.controls.length+4){\r\n            pageButtons.push(<PageButton key={i} pos={pos} text=\"+\" state=\"active\" onClick={()=>{this.addPage(p)}}/>);\r\n          }else{\r\n            pageButtons.push(<PageButton key={i} pos={pos} text=\"\" state=\"inactive\" onClick={()=>{}}/>);\r\n          }\r\n        }\r\n      }\r\n\r\n        return(\r\n            <div className=\"controlPane\">\r\n              {knobs}\r\n              <div className=\"pages\">\r\n                {pageButtons}\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { useState, useRef } from 'react';\r\nimport ReactFlow,  { ReactFlowProvider, Background, Elements, removeElements, addEdge, Controls } from 'react-flow-renderer';\r\nimport {Menu} from './menu/Menu';\r\nimport {nodeTypes, lib} from './library/Library'\r\nimport {Encoders, Control} from './controls/Controls'\r\nimport {objectData, objectParam} from './library/LibraryTypes'\r\nimport { saveAs } from 'file-saver';\r\nimport {EditText} from 'react-edit-text';\r\n\r\nlet initialElements:Elements = [\r\n  {\r\n    id: '1',\r\n    type: 'audioInNode',\r\n    data: { name: \"Audio In\", params: [], inputs: [], outputs: [] },\r\n    position: { x: 500, y: 100 },\r\n  },\r\n  {\r\n    id: '2',\r\n    type: 'audioOutNode',\r\n    data: { name: \"Audio Out\", params: [], inputs: [], outputs: [] },\r\n    position: { x: 500, y: 600 },\r\n  }\r\n];\r\n\r\nlet initialControls: Control[]=[\r\n  {name:\"ctl1\", value:0},{name:\"ctl2\", value:8},{name:\"ctl3\", value:16},{name:\"ctl4\", value:64},\r\n];\r\n\r\n\r\n\r\nlet id = 3;\r\nlet anyNull:any=null;\r\nlet selIndex= 0;\r\nconst seperator = \"~%$^\"\r\n\r\n\r\nconst App = () => {\r\n\r\n\r\n  const getId= () => `dndnode_`+id++\r\n  \r\n  const reactFlowWrapper: any = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance]:any = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n  const [controls, setControls] = useState(initialControls);\r\n  const [selObj, setSelectedObj] = useState(anyNull);\r\n  const [auth, setAuth] = useState(false);\r\n\r\n  const onElementClick = (event: any, element: any) => {}/*console.log('click', element)*/;\r\n  const onPaneClick = (event: any) => {}/*console.log('onPaneClick', event)*/;\r\n  const onConnect = (params: any) => setElements((els) => addEdge(params, els));\r\n  const onElementsRemove = (elementsToRemove: any) => setElements((els) => removeElements(elementsToRemove, els));\r\n  const onLoad = (_reactFlowInstance: any) => setReactFlowInstance(_reactFlowInstance);\r\n  const onSelectionChange = (selements: Elements<any> | null) => {\r\n    \r\n    if (selements != null) {\r\n      if(selements?.length === 1){\r\n        elements.forEach((e, i) => {\r\n          if(e.id === selements[0].id){\r\n            setSelectedObj(e);\r\n            selIndex = i;\r\n          }\r\n        })      \r\n      } else{setSelectedObj(null);}\r\n    } else{setSelectedObj(null);}\r\n  };\r\n\r\n  const onParamChange = (params:objectParam[]) => {\r\n    const updatedEles = [...elements];\r\n    updatedEles[selIndex].data.params = params;\r\n    setElements(updatedEles);\r\n  }\r\n\r\n  const onControlChange=(allCtls:Control[], control: number, val: number, name: string) => {\r\n\r\n    if(allCtls != null){\r\n      setControls(allCtls);\r\n      return;\r\n    }\r\n\r\n    if(control < controls.length){\r\n\r\n    /* Make shallow copy */\r\n    let ctls = [...controls];\r\n    /* Update and pass new values to callback */\r\n    if(val !== null){\r\n      ctls[control].value = val;\r\n    }\r\n    if(name !== null){\r\n      ctls[control].name = name;\r\n    }\r\n    \r\n    setControls(ctls);\r\n    \r\n      setElements((els) =>\r\n        els.map((el) => {\r\n          if(el.data !== undefined){\r\n            el.data.params.forEach((p,pi) => {\r\n              if(p.fixed === false && p.ctlIdx === control){\r\n                switch(p.mapShape){\r\n                  case 0: //Linear\r\n                    p.value = (((ctls[control].value/100) * (p.mapMax-p.mapMin)) + p.mapMin).toFixed(2);\r\n                    break;\r\n                  case 1: //Exp\r\n                    p.value = (((ctls[control].value/100) * (ctls[control].value/100) * (p.mapMax-p.mapMin)) + p.mapMin).toFixed(2);\r\n                    break;\r\n                  case 2: //Parabola\r\n                    let p1 = (ctls[control].value-50)/5;\r\n                    p.value = ( (((100-(p1*p1))/100) * (p.mapMax-p.mapMin)) + p.mapMin).toFixed(2);\r\n                    break;\r\n                }\r\n              }\r\n            })\r\n          }\r\n          return el;\r\n        })\r\n      );\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const onDragOver = (event: any) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  };\r\n  \r\n  const onDrop = (event: any) => {\r\n    event.preventDefault();\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      \r\n    const type = event.dataTransfer.getData('application/reactflow');\r\n    const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n    \r\n    /* Initialise new object data */\r\n    var objectData: objectData = {\r\n      name: `${type}`,\r\n      params: [],\r\n      inputs: [],\r\n      outputs: [],\r\n    }\r\n\r\n    /* Add default params */\r\n    lib.objects[type].paramList.forEach((p,i)=>{\r\n      objectData.params.push({fixed: true, value:p.default, ctlIdx: 0, mapMin:0, mapMax:1, mapShape:0});\r\n    })\r\n    \r\n    /* Create and add new object */\r\n    const newNode = {\r\n      id: getId(),\r\n      type,\r\n      position,\r\n      data: objectData,\r\n      selectable: true,\r\n    };\r\n\r\n    setElements((es) => es.concat(newNode));\r\n\r\n  };\r\n\r\n  const save = () => {\r\n    let blobby = new Blob([JSON.stringify(elements) + seperator + JSON.stringify(controls)], {type: \"text/plain;charset=utf-8\"});\r\n    saveAs.saveAs(blobby, \"config.hwc\")\r\n  };\r\n\r\n  const load = (e) => {\r\n      e.preventDefault()\r\n      const reader = new FileReader()\r\n      reader.onload = async (e) => { \r\n        let r:any = reader.result;\r\n        let settings = r.split(seperator)\r\n        let es=JSON.parse(settings[0]);\r\n        let cs=JSON.parse(settings[1]);\r\n        console.log(es);\r\n        console.log(cs);\r\n      setElements(es)\r\n      setControls(cs)\r\n      };\r\n      reader.readAsText(e.target.files[0])\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    auth?\r\n    <div style={{ height:\"100vh\" }}>\r\n      \r\n      <ReactFlowProvider>\r\n        <div style={{ height:\"100vh\" }} className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n        <ReactFlow\r\n          style={{background: '#171620'}}\r\n          elements={elements}\r\n          onElementClick={onElementClick}\r\n          onSelectionChange={onSelectionChange}\r\n          onPaneClick={onPaneClick}\r\n          onElementsRemove={onElementsRemove}\r\n          onConnect={onConnect}\r\n          onLoad={onLoad}\r\n          onDrop={onDrop}\r\n          onDragOver={onDragOver}\r\n          nodeTypes={nodeTypes}\r\n          deleteKeyCode={46} /* 'delete'-key */\r\n        >\r\n          <Menu show={false} controls={controls} selObj={selObj} onParamChange={onParamChange} onSave={save} onLoad={load}/>\r\n          <Background  gap={12} size={1} color={'#000000'}/>\r\n          <Encoders page={0} controls={controls} onChange={onControlChange} />\r\n          <Controls/>\r\n        </ReactFlow>\r\n        </div>\r\n      </ReactFlowProvider>\r\n      \r\n    </div>\r\n    :\r\n    <div>         \r\n      <div style={{position:\"absolute\", left:\"50vw\", top:\"20vh\"}} >GIMME PASSWORD\r\n      <EditText style={{width:\"150px\", height:\"20px\", backgroundColor:\"#B9A\", border:'1px solid black',position:\"absolute\",  left:\"0vw\", top:\"50px\"}} \r\n          onSave={(obj)=>{if(obj.value === \"showme\"){setAuth(true);}}}\r\n          />\r\n          </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}